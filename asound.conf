pcm.camilladsp { # You can use any name, not just camilladsp
    # This must be present - it declares to use this plugin.
    # The type is NOT a variable name you can choose.
    # You can however create multiple type cdsp plugins
    # with different names (pcm.camilladsp is the name here) 
    # if you want to specify different parameters
    type cdsp
      # This is the absolute path to the CamillaDSP executable.
      # It must have executable permission for any user that
      # runs an audio program that uses this plugin.
      cpath "/path/to/camilladsp"
      
      # This is the absolute path to the YAML template the 
      # plugin will read and pass along to CamillaDSP
      # after making the above substitutions.  It must
      # be readable by any user that runs an audio program
      # that uses this plugin.
      config_in "/path/to/config_in.yaml"
      
      # An alternative to config_in is to set config_cmd.
      # This command will be called whenever the hw_params
      # change with arguments "format rate channels".  It
      # should create the YAML file CamillaDSP will load
      # and place it in the location specified by the 
      # config_out parameter.
      # config_cmd "/path/to/more_complex_yaml_creator
      
      # This is the absolute path where the plugin will
      # write the YAML file that CamillaDSP actually loads.
      # Is must be readable AND writable by any user that
      # runs an audio program that uses this plugin.
      config_out "/path/to/config_out.yaml"
      
      # If you wish to specify additional arguments to
      # CamillaDSP you can specify them using the cargs
      # array.  Numeric arguments must be quoted in strings
      # or the plugin will fail to load.
      cargs [
        -p "1234"
        -a "0.0.0.0"
        -l warn
      ]
      
      # You must specify the number of input channels this plugin
      # will enumerate to audio programs.
      # The plugin will accept a single value like this.
      channels 2
      # Or a range like this. (Uncomment the lines.)
      #min_channels 1
      #max_channels 2
      # But only one method can be used.
      
      # Sample rates that the plugin will enumerate to audio programs
      # must also be specified.  They can be configured as a specific list
      # like this.  (Up to 100 entries.)
      rates = [
        44100 
        48000 
        88200 
        96000
        176400
        192000
        352800
        384000
      ]
      # Or as a range like this.  (Uncomment the lines.)  
      #min_rate 44100
      #max_rate 384000      
      # Note that if you use a range like this ALSA will
      # accept ANYTHING in that range.  Even something 
      # odd like 45873.  If you aren't using CamillaDSP's
      # resampler and don't have a very unusual DAC you
      # are probably better off with the list format above.
      
      # Extra samples can be provided in a rate scaling way for the
      # two most common audio base rates.  This is under the assumption
      # your filters will be N times as long at N times the base rate.
      # Any of the following three values can be set or excluded in any
      # combination.
      
      # Used when the sample rate is not an integer multiple of 44100
      # or 48000 or when the corresponding rate matching extra_samples 
      # option is not set.
      extra_samples 0
      
      # Used when the sample rate is an integer multiple of 44100.
      # In this case {extrasamples} will be replaced with 
      # {samplerate/44100 * extra_samples_44100}.
      extra_samples_44100 8192

      # Used when the sample rate is an integer multiple of 48000.
      # In this case {extrasamples} will be replaced with 
      # {samplerate/48000 * extra_samples_48000}.
      extra_samples_48000 8916
      
      # The following entries allows the use of custom tokens for the
      # search and replace performed when config_in is specified.
      # To set custom tokens uncomment the lines below and replace the
      # default tokens with the desired tokens wrapped in quotes.
      #format_token "{format}"
      #rate_token "{samplerate}"
      #channels_token "{channels}"
      #ext_samp_token "{extrasamples}"
}
